{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/kristiina/code/bird-observation-app/bird-observation-app/screens/AddObservation.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Slider, Input, CheckBox, Button } from 'react-native-elements';\nimport DateTimePickerModal from 'react-native-modal-datetime-picker';\n\nvar Form = function Form(_ref) {\n  var observation = _ref.observation;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default function AddObservation() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      observation = _useState2[0],\n      setObservation = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      datePickerVisibility = _useState4[0],\n      setDatePickerVisibility = _useState4[1];\n\n  var handleConfirm = function handleConfirm(date) {\n    setObservation(_objectSpread({\n      datetime: date\n    }, observation));\n    console.log(\"OBSERVATION\", observation);\n    hideDatePicker();\n  };\n\n  var hideDatePicker = function hideDatePicker() {\n    setDatePickerVisibility(false);\n  };\n\n  var showDatePicker = function showDatePicker() {\n    setDatePickerVisibility(true);\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    console.log(event);\n    console.log(event.target.value);\n    setObservation(_objectSpread({}, observation));\n  };\n\n  var handleName = function handleName(text) {};\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Add obs\"), React.createElement(Input, {\n    placeholder: \"species\",\n    label: \"laji\",\n    name: \"species\",\n    onChangeText: function onChangeText(text) {\n      return setObservation(_objectSpread(_objectSpread({}, observation), {}, {\n        species: text\n      })) || console.log(observation);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), React.createElement(Input, {\n    placeholder: \"paikka\",\n    label: \"paikka\",\n    name: \"place\",\n    onChangeText: function onChangeText(text) {\n      return setObservation(_objectSpread(_objectSpread({}, observation), {}, {\n        place: text\n      })) || console.log(observation);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \" aseta aika\",\n    onPress: showDatePicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), React.createElement(DateTimePickerModal, {\n    isVisible: datePickerVisibility,\n    mode: \"datetime\",\n    onConfirm: handleConfirm,\n    onCancel: hideDatePicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    style: styles.button,\n    titleStyle: {\n      color: 'white'\n    },\n    title: \"tulosta\",\n    onPress: function onPress() {\n      return console.log(observation) || setObservation({});\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    width: 300,\n    margin: 10,\n    borderRadius: 10,\n    backgroundColor: '#C7BABA'\n  }\n});","map":{"version":3,"sources":["/home/kristiina/code/bird-observation-app/bird-observation-app/screens/AddObservation.js"],"names":["StatusBar","React","useState","Slider","Input","CheckBox","Button","DateTimePickerModal","Form","observation","styles","container","AddObservation","setObservation","datePickerVisibility","setDatePickerVisibility","handleConfirm","date","datetime","console","log","hideDatePicker","showDatePicker","handleInputChange","event","target","value","handleName","text","species","place","button","color","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","margin","borderRadius"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Slider, Input, CheckBox, Button } from 'react-native-elements';\nimport DateTimePickerModal from 'react-native-modal-datetime-picker';\n\n\nconst Form = ({ observation }) => {\n  return (\n    <View style={styles.container}>\n\n\n    </View>\n\n  )\n}\n// date observer weather\nexport default function AddObservation() {\n  const [observation, setObservation] = useState({})\n  const [datePickerVisibility, setDatePickerVisibility] = useState(false)\n\n  const handleConfirm = (date) => {\n    //console.warn(\"A date has been picked: \", date);\n    setObservation({ datetime: date, ...observation })\n    console.log(\"OBSERVATION\", observation)\n    hideDatePicker();\n\n  }\n\n  const hideDatePicker = () => {\n    setDatePickerVisibility(false);\n  };\n\n  const showDatePicker = () => {\n    setDatePickerVisibility(true)\n  }\n\n  const handleInputChange = (event) => {\n    console.log(event)\n    console.log(event.target.value)\n    setObservation({ ...observation, })\n\n  }\n\n  const handleName = (text) => {\n\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text>Add obs</Text>\n\n      <Input placeholder=\"species\" label=\"laji\" name=\"species\"\n        onChangeText={text => setObservation({ ...observation, species: text }) || console.log(observation)}></Input>\n\n      <Input placeholder=\"paikka\" label=\"paikka\" name=\"place\"\n        onChangeText={text => setObservation({ ...observation, place: text }) || console.log(observation)}></Input>\n\n      <Button title=\" aseta aika\" onPress={showDatePicker}></Button>\n\n      <DateTimePickerModal\n        isVisible={datePickerVisibility} mode='datetime'\n        onConfirm={handleConfirm} onCancel={hideDatePicker}></DateTimePickerModal>\n\n      <Button style={styles.button} titleStyle={{color:'white'}} title=\"tulosta\" onPress={() => console.log(observation) || setObservation({})}></Button>\n\n      {/*\n\n      \n\n      <CheckBox title='aurinkoinen'></CheckBox>\n      <CheckBox title='lämmin'></CheckBox>\n      <CheckBox title='pilviä ja lämmin'></CheckBox>\n      <CheckBox title='sateinen'></CheckBox>\n\n      <Slider value={observation.amount}></Slider> */}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  button:{\n    width: 300,\n    margin: 10,\n    borderRadius:10,\n    backgroundColor:'#C7BABA'\n}\n});"]},"metadata":{},"sourceType":"module"}