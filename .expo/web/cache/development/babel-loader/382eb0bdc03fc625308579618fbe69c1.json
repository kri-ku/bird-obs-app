{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/kristiina/code/bird-observation-app/bird-observation-app/screens/AddObservation.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Slider, Input, CheckBox, Button, Icon, ButtonGroup } from 'react-native-elements';\nimport DateTimePickerModal from 'react-native-modal-datetime-picker';\nimport { color } from 'react-native-reanimated';\nimport shouldUseActivityState from 'react-native-screens';\n\nvar SetSexButtons = function SetSexButtons(_ref) {\n  var observation = _ref.observation;\n  var buttons = ['uros', 'naaras', 'lauma'];\n  var selectedIndex = 0;\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default function AddObservation() {\n  var _useState = useState({\n    species: '',\n    place: '',\n    datetime: {},\n    sex: '',\n    amount: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      observation = _useState2[0],\n      setObservation = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      datePickerVisibility = _useState4[0],\n      setDatePickerVisibility = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dateToPrint = _useState6[0],\n      setDateToPrint = _useState6[1];\n\n  var buttons = ['uros', 'naaras', 'lauma'];\n\n  var _useState7 = useState(2),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedIndex = _useState8[0],\n      setSelectedIndex = _useState8[1];\n\n  var handleConfirm = function handleConfirm(date) {\n    console.log('DATE', typeof date);\n    makePrintableDate();\n    setObservation(_objectSpread(_objectSpread({}, observation), {}, {\n      datetime: date\n    }));\n    hideDatePicker();\n  };\n\n  var makePrintableDate = function makePrintableDate() {\n    if (observation.datetime === {}) {\n      setDateToPrint('');\n    } else {\n      setDateToPrint(observation.datetime.getHours + \":\" + observation.datetime.getMinutes + \",  \" + observation.datetime.getDate + \".\" + (observation.datetime.getMonth + 1) + \".\" + observation.datetime.getFullYear);\n    }\n  };\n\n  var hideDatePicker = function hideDatePicker() {\n    setDatePickerVisibility(false);\n  };\n\n  var showDatePicker = function showDatePicker() {\n    setDatePickerVisibility(true);\n  };\n\n  var updateIndex = function updateIndex(index) {\n    setSelectedIndex({\n      index: index\n    });\n    console.log(\"INDEKSIII\", index);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, React.createElement(Input, {\n    label: \"laji\",\n    name: \"species\",\n    onChangeText: function onChangeText(text) {\n      return setObservation(_objectSpread(_objectSpread({}, observation), {}, {\n        species: text\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(Input, {\n    label: \"paikka\",\n    name: \"place\",\n    onChangeText: function onChangeText(text) {\n      return setObservation(_objectSpread(_objectSpread({}, observation), {}, {\n        place: text\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }), React.createElement(Icon, {\n    reverse: true,\n    name: \"map\",\n    iconStyle: {\n      padding: 10,\n      borderRadius: 1,\n      color: '#C7BABA'\n    },\n    raised: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, React.createElement(Input, {\n    label: \"aika\",\n    name: \"aika\",\n    onFocus: showDatePicker,\n    placeholder: observation.datetime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    buttonStyle: styles.timebutton,\n    titleStyle: {\n      color: 'white'\n    },\n    title: \" aseta aika\",\n    onPress: showDatePicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, dateToPrint)), React.createElement(DateTimePickerModal, {\n    isVisible: datePickerVisibility,\n    mode: \"datetime\",\n    onConfirm: handleConfirm,\n    onCancel: hideDatePicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), React.createElement(ButtonGroup, {\n    buttons: buttons,\n    containerStyle: styles.button,\n    selectedIndex: selectedIndex,\n    onPress: function onPress() {\n      return updateIndex(selectedIndex);\n    },\n    buttonContainerStyle: {\n      backgroundColor: '#C7BABA'\n    },\n    textStyle: {\n      color: 'white'\n    },\n    selectedButtonStyle: {\n      backgroundColor: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      width: '100%',\n      alignItems: 'flex-start'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, React.createElement(CheckBox, {\n    title: \"aurinkoinen\",\n    size: 10,\n    checkedColor: 'blue',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), React.createElement(CheckBox, {\n    title: \"l\\xE4mmin\",\n    size: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), React.createElement(CheckBox, {\n    title: \"kuuma\",\n    size: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, React.createElement(CheckBox, {\n    title: \"sadetta\",\n    size: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }), React.createElement(CheckBox, {\n    title: \"rankkasade\",\n    size: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }), React.createElement(CheckBox, {\n    title: \"lunta\",\n    size: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, React.createElement(CheckBox, {\n    title: \"kylm\\xE4\",\n    size: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }), React.createElement(CheckBox, {\n    title: \"loskaa\",\n    size: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }))), React.createElement(Slider, {\n    value: observation.amount,\n    maximumValue: 9000000,\n    minimumValue: 1,\n    trackStyle: {\n      height: 10,\n      backgroundColor: 'red'\n    },\n    thumbTouchSize: {\n      height: 20,\n      width: 20\n    },\n    thumbProps: {\n      Component: Animated.Image,\n      source: {\n        uri: 'https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/128.jpg'\n      }\n    },\n    step: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  })), React.createElement(Button, {\n    buttonStyle: styles.button,\n    titleStyle: {\n      color: 'white'\n    },\n    title: \"TALLENNA\",\n    onPress: function onPress() {\n      return console.log(observation) || setObservation({});\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start'\n  },\n  button: {\n    width: 300,\n    margin: 10,\n    borderRadius: 10,\n    backgroundColor: '#C7BABA'\n  },\n  timebutton: {\n    width: 150,\n    margin: 10,\n    borderRadius: 10,\n    backgroundColor: '#C7BABA'\n  },\n  form: {\n    width: '80%',\n    alignItems: 'flex-start',\n    padding: 20,\n    marginTop: 20\n  }\n});","map":{"version":3,"sources":["/home/kristiina/code/bird-observation-app/bird-observation-app/screens/AddObservation.js"],"names":["StatusBar","React","useState","Slider","Input","CheckBox","Button","Icon","ButtonGroup","DateTimePickerModal","color","shouldUseActivityState","SetSexButtons","observation","buttons","selectedIndex","AddObservation","species","place","datetime","sex","amount","setObservation","datePickerVisibility","setDatePickerVisibility","dateToPrint","setDateToPrint","setSelectedIndex","handleConfirm","date","console","log","makePrintableDate","hideDatePicker","getHours","getMinutes","getDate","getMonth","getFullYear","showDatePicker","updateIndex","index","styles","container","form","text","flexDirection","alignItems","padding","borderRadius","timebutton","button","backgroundColor","width","alignContent","height","Component","Animated","Image","source","uri","StyleSheet","create","flex","justifyContent","margin","marginTop"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { StyleSheet, Text, View, Animated } from 'react-native';\nimport { Slider, Input, CheckBox, Button, Icon, ButtonGroup } from 'react-native-elements';\nimport DateTimePickerModal from 'react-native-modal-datetime-picker';\nimport { color } from 'react-native-reanimated';\nimport shouldUseActivityState from 'react-native-screens'\n\n\nconst SetSexButtons = ({ observation }) => {\n  const buttons = ['uros', 'naaras', 'lauma']\n  let selectedIndex = 0\n  return (\n    <View></View>\n  )\n}\n\n// date observer weather\nexport default function AddObservation() {\n  const [observation, setObservation] = useState({ species: '', place: '', datetime: {}, sex: '', amount: 0 })\n  const [datePickerVisibility, setDatePickerVisibility] = useState(false)\n  const [dateToPrint, setDateToPrint] = useState('')\n  const buttons = ['uros', 'naaras', 'lauma']\n  const [selectedIndex, setSelectedIndex] = useState(2)\n\n\n  const handleConfirm = (date) => {\n    console.log('DATE', typeof (date))\n    makePrintableDate()\n    setObservation({ ...observation, datetime: date })\n    hideDatePicker()\n\n  }\n\n  const makePrintableDate = () => {\n    if (observation.datetime === {}) {\n      setDateToPrint('')\n    } else {\n      setDateToPrint(`${observation.datetime.getHours}:${observation.datetime.getMinutes},  ${observation.datetime.getDate}.${observation.datetime.getMonth + 1}.${observation.datetime.getFullYear}`)\n      // <Text>{observation.datetime.getHours}:{observation.datetime.getMinutes},  {observation.datetime.getDate}.{observation.datetime.getMonth + 1}.{observation.datetime.getFullYear}</Text>\n    }\n  }\n\n  const hideDatePicker = () => {\n    setDatePickerVisibility(false);\n  };\n\n  const showDatePicker = () => {\n    setDatePickerVisibility(true)\n  }\n\n  const updateIndex = (index) => {\n    setSelectedIndex({ index })\n    console.log(\"INDEKSIII\", index)\n\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.form}>\n\n        <Input label=\"laji\" name=\"species\"\n          onChangeText={text => setObservation({ ...observation, species: text })}></Input>\n\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <Input label=\"paikka\" name=\"place\"\n            onChangeText={text => setObservation({ ...observation, place: text })}></Input>\n          <Icon reverse name='map' iconStyle={{ padding: 10, borderRadius: 1, color: '#C7BABA' }} raised={true}></Icon>\n        </View>\n\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <Input label=\"aika\" name=\"aika\"\n            onFocus={showDatePicker}\n            placeholder={observation.datetime}></Input>\n        </View>\n\n        <View style={{ flexDirection: 'row' }}>\n          <Button buttonStyle={styles.timebutton} titleStyle={{ color: 'white' }} title=\" aseta aika\" onPress={showDatePicker}></Button>\n          <Text>{dateToPrint}</Text>\n        </View>\n\n        <DateTimePickerModal\n          isVisible={datePickerVisibility} mode='datetime'\n          onConfirm={handleConfirm} onCancel={hideDatePicker}></DateTimePickerModal>\n\n        <ButtonGroup\n          buttons={buttons}\n          containerStyle={styles.button}\n          selectedIndex={selectedIndex}\n          onPress={() => updateIndex(selectedIndex)}\n          buttonContainerStyle={{ backgroundColor: '#C7BABA' }}\n          textStyle={{ color: 'white' }}\n          selectedButtonStyle={{ backgroundColor: 'black' }}>\n        </ButtonGroup>\n\n        <View style={{ width: '100%', alignItems: 'flex-start' }}>\n          <View style={{ flexDirection: 'row', alignContent: 'center' }}>\n            <CheckBox title='aurinkoinen' size={10} checkedColor={'blue'}></CheckBox>\n            <CheckBox title='lämmin' size={10}></CheckBox>\n            <CheckBox title='kuuma' size={10}></CheckBox>\n          </View>\n\n          <View style={{ flexDirection: 'row' }}>\n            <CheckBox title='sadetta' size={14}></CheckBox>\n            <CheckBox title='rankkasade' size={14}></CheckBox>\n            <CheckBox title='lunta' size={14}></CheckBox>\n          </View>\n          <View style={{ flexDirection: 'row' }}>\n            <CheckBox title='kylmä' size={14}></CheckBox>\n            <CheckBox title='loskaa' size={14}></CheckBox>\n          </View>\n        </View>\n\n        <Slider value={observation.amount}\n          maximumValue={9000000}\n          minimumValue={1}\n          trackStyle={{ height: 10, backgroundColor: 'red' }}\n          thumbTouchSize={{ height: 20, width: 20 }}\n          thumbProps={{\n            Component: Animated.Image,\n            source: {\n              uri: 'https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/128.jpg',\n            },\n          }}\n          step={1}></Slider>\n      </View>\n\n      <Button buttonStyle={styles.button} titleStyle={{ color: 'white' }} title=\"TALLENNA\" onPress={() => console.log(observation) || setObservation({})}></Button>\n\n      {/*\n\n      \n\n      \n\n       */}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n  },\n  button: {\n    width: 300,\n    margin: 10,\n    borderRadius: 10,\n    backgroundColor: '#C7BABA'\n  },\n  timebutton: {\n    width: 150,\n    margin: 10,\n    borderRadius: 10,\n    backgroundColor: '#C7BABA'\n\n  },\n  form: {\n    width: '80%',\n    alignItems: 'flex-start',\n    padding: 20,\n    marginTop: 20\n  }\n});"]},"metadata":{},"sourceType":"module"}