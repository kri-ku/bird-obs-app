{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/kristiina/code/bird-observation-app/bird-observation-app/screens/AddObservation.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Slider, Input, CheckBox, Button, Icon } from 'react-native-elements';\nimport DateTimePickerModal from 'react-native-modal-datetime-picker';\nimport { color } from 'react-native-reanimated';\nimport shouldUseActivityState from 'react-native-screens';\n\nvar Form = function Form(_ref) {\n  var observation = _ref.observation;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default function AddObservation() {\n  var _useState = useState({\n    species: '',\n    place: '',\n    datetime: {}\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      observation = _useState2[0],\n      setObservation = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      datePickerVisibility = _useState4[0],\n      setDatePickerVisibility = _useState4[1];\n\n  var handleConfirm = function handleConfirm(date) {\n    console.log('DATE', typeof date);\n    setObservation(_objectSpread(_objectSpread({}, observation), {}, {\n      datetime: date\n    }));\n    hideDatePicker();\n  };\n\n  var hideDatePicker = function hideDatePicker() {\n    setDatePickerVisibility(false);\n  };\n\n  var showDatePicker = function showDatePicker() {\n    setDatePickerVisibility(true);\n  };\n\n  var handleName = function handleName(text) {};\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Add obs\"), React.createElement(Input, {\n    label: \"laji\",\n    name: \"species\",\n    onChangeText: function onChangeText(text) {\n      return setObservation(_objectSpread(_objectSpread({}, observation), {}, {\n        species: text\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, React.createElement(Input, {\n    label: \"paikka\",\n    name: \"place\",\n    onChangeText: function onChangeText(text) {\n      return setObservation(_objectSpread(_objectSpread({}, observation), {}, {\n        place: text\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), React.createElement(Icon, {\n    reverse: true,\n    name: \"map\",\n    iconStyle: {\n      padding: 10,\n      borderRadius: 1,\n      color: '#C7BABA'\n    },\n    raised: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    buttonStyle: styles.timebutton,\n    titleStyle: {\n      color: 'white'\n    },\n    title: \" aseta aika\",\n    onPress: showDatePicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, observation.datetime.getHours(), \":\", observation.datetime.getMinutes(), \",  \", observation.datetime.getDate(), \".\", observation.datetime.getMonth() + 1, \".\", observation.datetime.getFullYear())), React.createElement(DateTimePickerModal, {\n    isVisible: datePickerVisibility,\n    mode: \"datetime\",\n    onConfirm: handleConfirm,\n    onCancel: hideDatePicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, React.createElement(CheckBox, {\n    title: \"uros\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), React.createElement(CheckBox, {\n    title: \"naaras\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), React.createElement(CheckBox, {\n    title: \"group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }))), React.createElement(Button, {\n    buttonStyle: styles.button,\n    titleStyle: {\n      color: 'white'\n    },\n    title: \"tulosta\",\n    onPress: function onPress() {\n      return console.log(observation) || setObservation({});\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start'\n  },\n  button: {\n    width: 300,\n    margin: 10,\n    borderRadius: 10,\n    backgroundColor: '#C7BABA'\n  },\n  timebutton: {\n    width: 150,\n    margin: 10,\n    borderRadius: 10,\n    backgroundColor: '#C7BABA'\n  },\n  form: {\n    width: '80%',\n    alignItems: 'flex-start',\n    padding: 20\n  }\n});","map":{"version":3,"sources":["/home/kristiina/code/bird-observation-app/bird-observation-app/screens/AddObservation.js"],"names":["StatusBar","React","useState","Slider","Input","CheckBox","Button","Icon","DateTimePickerModal","color","shouldUseActivityState","Form","observation","styles","container","AddObservation","species","place","datetime","setObservation","datePickerVisibility","setDatePickerVisibility","handleConfirm","date","console","log","hideDatePicker","showDatePicker","handleName","text","form","flexDirection","alignItems","padding","borderRadius","timebutton","getHours","getMinutes","getDate","getMonth","getFullYear","button","StyleSheet","create","flex","backgroundColor","justifyContent","width","margin"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Slider, Input, CheckBox, Button, Icon } from 'react-native-elements';\nimport DateTimePickerModal from 'react-native-modal-datetime-picker';\nimport { color } from 'react-native-reanimated';\nimport shouldUseActivityState from 'react-native-screens'\n\n\nconst Form = ({ observation }) => {\n  return (\n    <View style={styles.container}>\n\n\n    </View>\n\n  )\n}\n// date observer weather\nexport default function AddObservation() {\n  const [observation, setObservation] = useState({ species: '', place: '', datetime: {} })\n  const [datePickerVisibility, setDatePickerVisibility] = useState(false)\n\n  const handleConfirm = (date) => {\n    //console.warn(\"A date has been picked: \", date);\n    console.log('DATE', typeof (date))\n\n    setObservation({ ...observation, datetime: date })\n    hideDatePicker()\n\n  }\n\n  const hideDatePicker = () => {\n    setDatePickerVisibility(false);\n  };\n\n  const showDatePicker = () => {\n    setDatePickerVisibility(true)\n  }\n\n\n  const handleName = (text) => {\n\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.form}>\n        <Text>Add obs</Text>\n\n        <Input label=\"laji\" name=\"species\"\n          onChangeText={text => setObservation({ ...observation, species: text })}></Input>\n\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <Input label=\"paikka\" name=\"place\"\n            onChangeText={text => setObservation({ ...observation, place: text })}></Input>\n          <Icon reverse name='map' iconStyle={{ padding: 10, borderRadius: 1, color: '#C7BABA' }} raised={true}></Icon>\n        </View>\n\n        <View style={{ flexDirection: 'row' }}>\n          <Button buttonStyle={styles.timebutton} titleStyle={{ color: 'white' }} title=\" aseta aika\" onPress={showDatePicker}></Button>\n          <Text>{observation.datetime.getHours()}:{observation.datetime.getMinutes()},  {observation.datetime.getDate()}.{observation.datetime.getMonth() + 1}.{observation.datetime.getFullYear()}</Text>\n        </View>\n\n        <DateTimePickerModal\n          isVisible={datePickerVisibility} mode='datetime'\n          onConfirm={handleConfirm} onCancel={hideDatePicker}></DateTimePickerModal>\n      <View style={{flexDirection: 'row'}}>\n        <CheckBox title='uros'></CheckBox>\n        <CheckBox title='naaras'></CheckBox>\n        <CheckBox title='group'></CheckBox>\n        </View>\n      </View>\n\n      <Button buttonStyle={styles.button} titleStyle={{ color: 'white' }} title=\"tulosta\" onPress={() => console.log(observation) || setObservation({})}></Button>\n\n      {/*\n\n      \n\n      \n\n      <Slider value={observation.amount}></Slider> */}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n  },\n  button: {\n    width: 300,\n    margin: 10,\n    borderRadius: 10,\n    backgroundColor: '#C7BABA'\n  },\n  timebutton: {\n    width: 150,\n    margin: 10,\n    borderRadius: 10,\n    backgroundColor: '#C7BABA'\n\n  },\n  form: {\n    width: '80%',\n    alignItems: 'flex-start',\n    padding: 20\n  }\n});"]},"metadata":{},"sourceType":"module"}