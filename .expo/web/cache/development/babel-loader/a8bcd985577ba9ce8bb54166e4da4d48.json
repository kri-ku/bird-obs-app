{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/kristiina/code/bird-observation-app/bird-observation-app/screens/AddObservation.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Slider, Input, CheckBox, Button, Icon, ButtonGroup } from 'react-native-elements';\nimport DateTimePickerModal from 'react-native-modal-datetime-picker';\nimport { color } from 'react-native-reanimated';\nimport shouldUseActivityState from 'react-native-screens';\n\nvar SetSexButtons = function SetSexButtons(_ref) {\n  var observation = _ref.observation;\n  var buttons = ['uros', 'naaras', 'lauma'];\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default function AddObservation() {\n  var _useState = useState({\n    species: '',\n    place: '',\n    datetime: {},\n    sex: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      observation = _useState2[0],\n      setObservation = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      datePickerVisibility = _useState4[0],\n      setDatePickerVisibility = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dateToPrint = _useState6[0],\n      setDateToPrint = _useState6[1];\n\n  var buttons = ['uros', 'naaras', 'lauma'];\n\n  var handleConfirm = function handleConfirm(date) {\n    console.log('DATE', typeof date);\n    makePrintableDate();\n    setObservation(_objectSpread(_objectSpread({}, observation), {}, {\n      datetime: date\n    }));\n    hideDatePicker();\n  };\n\n  var makePrintableDate = function makePrintableDate() {\n    if (observation.datetime === {}) {\n      setDateToPrint('');\n    } else {\n      setDateToPrint(observation.datetime.getHours + \":\" + observation.datetime.getMinutes + \",  \" + observation.datetime.getDate + \".\" + (observation.datetime.getMonth + 1) + \".\" + observation.datetime.getFullYear);\n    }\n  };\n\n  var hideDatePicker = function hideDatePicker() {\n    setDatePickerVisibility(false);\n  };\n\n  var showDatePicker = function showDatePicker() {\n    setDatePickerVisibility(true);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Add obs\"), React.createElement(Input, {\n    label: \"laji\",\n    name: \"species\",\n    onChangeText: function onChangeText(text) {\n      return setObservation(_objectSpread(_objectSpread({}, observation), {}, {\n        species: text\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, React.createElement(Input, {\n    label: \"paikka\",\n    name: \"place\",\n    onChangeText: function onChangeText(text) {\n      return setObservation(_objectSpread(_objectSpread({}, observation), {}, {\n        place: text\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), React.createElement(Icon, {\n    reverse: true,\n    name: \"map\",\n    iconStyle: {\n      padding: 10,\n      borderRadius: 1,\n      color: '#C7BABA'\n    },\n    raised: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    buttonStyle: styles.timebutton,\n    titleStyle: {\n      color: 'white'\n    },\n    title: \" aseta aika\",\n    onPress: showDatePicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, dateToPrint)), React.createElement(DateTimePickerModal, {\n    isVisible: datePickerVisibility,\n    mode: \"datetime\",\n    onConfirm: handleConfirm,\n    onCancel: hideDatePicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), React.createElement(ButtonGroup, {\n    buttons: buttons,\n    containerStyle: styles.button,\n    selectedIndex: 0,\n    onPress: setObservation(_objectSpread(_objectSpread({}, observation), {}, {\n      sex: buttons[selectedIndex]\n    })),\n    buttonContainerStyle: {\n      backgroundColor: '#C7BABA'\n    },\n    textStyle: {\n      color: 'white'\n    },\n    disabledSelectedTextStyle: {\n      color: 'gray'\n    },\n    selectedButtonStyle: {\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      width: '80%',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, React.createElement(CheckBox, {\n    title: \"uros\",\n    size: 14,\n    checkedColor: 'blue',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }), React.createElement(CheckBox, {\n    title: \"naaras\",\n    size: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }), React.createElement(CheckBox, {\n    title: \"group\",\n    size: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }))), React.createElement(Button, {\n    buttonStyle: styles.button,\n    titleStyle: {\n      color: 'white'\n    },\n    title: \"tulosta\",\n    onPress: function onPress() {\n      return console.log(observation) || setObservation({});\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start'\n  },\n  button: {\n    width: 300,\n    margin: 10,\n    borderRadius: 10,\n    backgroundColor: '#C7BABA'\n  },\n  timebutton: {\n    width: 150,\n    margin: 10,\n    borderRadius: 10,\n    backgroundColor: '#C7BABA'\n  },\n  form: {\n    width: '80%',\n    alignItems: 'flex-start',\n    padding: 20\n  }\n});","map":{"version":3,"sources":["/home/kristiina/code/bird-observation-app/bird-observation-app/screens/AddObservation.js"],"names":["StatusBar","React","useState","Slider","Input","CheckBox","Button","Icon","ButtonGroup","DateTimePickerModal","color","shouldUseActivityState","SetSexButtons","observation","buttons","AddObservation","species","place","datetime","sex","setObservation","datePickerVisibility","setDatePickerVisibility","dateToPrint","setDateToPrint","handleConfirm","date","console","log","makePrintableDate","hideDatePicker","getHours","getMinutes","getDate","getMonth","getFullYear","showDatePicker","styles","container","form","text","flexDirection","alignItems","padding","borderRadius","timebutton","button","selectedIndex","backgroundColor","width","StyleSheet","create","flex","justifyContent","margin"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Slider, Input, CheckBox, Button, Icon, ButtonGroup } from 'react-native-elements';\nimport DateTimePickerModal from 'react-native-modal-datetime-picker';\nimport { color } from 'react-native-reanimated';\nimport shouldUseActivityState from 'react-native-screens'\n\n\nconst SetSexButtons = ({ observation }) => {\n  const buttons = ['uros', 'naaras', 'lauma']\n  return (\n    <View></View>\n  )\n}\n\n// date observer weather\nexport default function AddObservation() {\n  const [observation, setObservation] = useState({ species: '', place: '', datetime: {}, sex:'' })\n  const [datePickerVisibility, setDatePickerVisibility] = useState(false)\n  const [dateToPrint, setDateToPrint] = useState('')\n  const buttons = ['uros', 'naaras', 'lauma']\n\n\n  const handleConfirm = (date) => {\n    console.log('DATE', typeof (date))\n    makePrintableDate()\n    setObservation({ ...observation, datetime: date })\n    hideDatePicker()\n\n  }\n\n  const makePrintableDate = () => {\n    if (observation.datetime === {}) {\n      setDateToPrint('')\n    } else {\n      setDateToPrint(`${observation.datetime.getHours}:${observation.datetime.getMinutes},  ${observation.datetime.getDate}.${observation.datetime.getMonth + 1}.${observation.datetime.getFullYear}`)\n      // <Text>{observation.datetime.getHours}:{observation.datetime.getMinutes},  {observation.datetime.getDate}.{observation.datetime.getMonth + 1}.{observation.datetime.getFullYear}</Text>\n    }\n  }\n\n  const hideDatePicker = () => {\n    setDatePickerVisibility(false);\n  };\n\n  const showDatePicker = () => {\n    setDatePickerVisibility(true)\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.form}>\n        <Text>Add obs</Text>\n\n        <Input label=\"laji\" name=\"species\"\n          onChangeText={text => setObservation({ ...observation, species: text })}></Input>\n\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <Input label=\"paikka\" name=\"place\"\n            onChangeText={text => setObservation({ ...observation, place: text })}></Input>\n          <Icon reverse name='map' iconStyle={{ padding: 10, borderRadius: 1, color: '#C7BABA' }} raised={true}></Icon>\n        </View>\n\n        <View style={{ flexDirection: 'row' }}>\n          <Button buttonStyle={styles.timebutton} titleStyle={{ color: 'white' }} title=\" aseta aika\" onPress={showDatePicker}></Button>\n          <Text>{dateToPrint}</Text>\n        </View>\n\n        <DateTimePickerModal\n          isVisible={datePickerVisibility} mode='datetime'\n          onConfirm={handleConfirm} onCancel={hideDatePicker}></DateTimePickerModal>\n\n        <ButtonGroup\n          buttons={buttons}\n          containerStyle={styles.button}\n          selectedIndex={0}\n          onPress={setObservation({...observation, sex: buttons[selectedIndex]})}\n          buttonContainerStyle={{ backgroundColor: '#C7BABA' }}\n          textStyle={{ color: 'white' }}\n          disabledSelectedTextStyle={{color:'gray'}}\n          selectedButtonStyle={{color:'black'}}>\n        </ButtonGroup>\n\n        <View style={{ flexDirection: 'row', width: '80%', alignItems: 'center' }}>\n          <CheckBox title='uros' size={14} checkedColor={'blue'}></CheckBox>\n          <CheckBox title='naaras' size={14}></CheckBox>\n          <CheckBox title='group' size={14}></CheckBox>\n        </View>\n      </View>\n\n      <Button buttonStyle={styles.button} titleStyle={{ color: 'white' }} title=\"tulosta\" onPress={() => console.log(observation) || setObservation({})}></Button>\n\n      {/*\n\n      \n\n      \n\n      <Slider value={observation.amount}></Slider> */}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n  },\n  button: {\n    width: 300,\n    margin: 10,\n    borderRadius: 10,\n    backgroundColor: '#C7BABA'\n  },\n  timebutton: {\n    width: 150,\n    margin: 10,\n    borderRadius: 10,\n    backgroundColor: '#C7BABA'\n\n  },\n  form: {\n    width: '80%',\n    alignItems: 'flex-start',\n    padding: 20\n  }\n});"]},"metadata":{},"sourceType":"module"}